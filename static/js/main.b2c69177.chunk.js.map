{"version":3,"sources":["AddDogStyles.tsx","AddDogField.tsx","DogList.tsx","App.tsx","index.tsx"],"names":["modalStyles","makeStyles","theme","modalPlacement","width","height","marginLeft","marginTop","dialogPaper","minHeight","maxHeight","borderRadius","customWidth","maxWidth","backgroundColor","fontSize","color","fontWeight","boxShadow","padding","textAlign","arrowStyles","AddDogContainer","styled","div","_templateObject","_taggedTemplateLiteral","DogButton","button","_templateObject2","DogListContainer","_templateObject3","ListContainer","_templateObject4","DogNameContainer","_templateObject5","AddDogField","props","modalOpen","setModalOpen","useState","formik","useFormik","initialValues","dogName","onSubmit","async","values","_ref","resetForm","length","onCreateDog","handleClose","classes","_jsxs","children","_jsx","onClick","Dialog","open","onClose","container","paper","fullWidth","DialogContent","handleSubmit","TextField","id","name","type","variant","placeholder","style","value","onChange","handleChange","error","touched","Boolean","errors","helperText","margin","DogList","dogs","setDogs","selectedDog","Select","event","selectedDogName","target","document","getElementById","innerHTML","map","dog","MenuItem","newDog","newDogList","App","className","rootElement","render"],"mappings":"uSAGO,MAAMA,EAAcC,aAAYC,IAAY,CACjDC,eAAgB,CACdC,MAAO,OACPC,OAAQ,OACRC,WAAY,MACZC,UAAW,MAEbC,YAAa,CACXC,UAAW,QACXC,UAAW,QACXC,aAAc,QAEhBC,YAAa,CACXC,SAAU,IACVC,gBAAiB,QACjBC,SAAU,OACVC,MAAO,YACPC,WAAY,IACZC,UAAW,yBACXC,QAAS,WACTC,UAAW,UAEbC,YAAa,CACXL,MAAO,QACPE,UAAW,iBAIFI,EAAkBC,IAAOC,IAAGC,MAAAC,YAAA,iIAQ5BC,EAAYJ,IAAOK,OAAMC,MAAAH,YAAA,qLAWzBI,EAAmBP,IAAOC,IAAGO,MAAAL,YAAA,sTAe7BM,EAAgBT,IAAOC,IAAGS,MAAAP,YAAA,qHAS1BQ,EAAmBX,IAAOC,IAAGW,MAAAT,YAAA,sO,mBC7DnC,MAAMU,EAAeC,IAC1B,MAAOC,EAAWC,GAAgBC,oBAAS,GACrCC,EAASC,YAAU,CACvBC,cAAe,CACbC,QAAS,IAEXC,SAAUC,MACRC,EAAqBC,KAEjB,IADJ,UAAEC,GAAsCD,EAEpCD,EAAOH,QAAQM,OAAS,UACpBb,EAAMc,YAAYJ,EAAOH,SAC/BK,IACF,IAQJ,MAAMG,EAAcA,KAClBb,GAAa,EAAM,EAGfc,EAAUrD,IAEhB,OACEsD,eAAChC,EAAe,CAAAiC,SAAA,CACdC,cAAC7B,EAAS,CAAC8B,QAZf,WACElB,GAAa,EACf,EAUwCgB,SAAC,YACrCC,cAACE,IAAM,CACLC,KAAMrB,EACNsB,QAASR,EACTC,QAAS,CACPQ,UAAWR,EAAQlD,eACnB2D,MAAOT,EAAQ7C,aAEjBuD,WAAW,EACXlD,SAAU,KAAK0C,SAEfD,eAACU,IAAa,CAAAT,SAAA,CACZD,eAAA,QAAMT,SAAUJ,EAAOwB,aAAaV,SAAA,CAClCC,cAACU,IAAS,CACRC,GAAG,UACHC,KAAK,UACLC,KAAK,UACLC,QAAQ,WACRC,YAAY,aACZR,WAAS,EACTS,MAAO,CAAEzD,SAAU,QACnB0D,MAAOhC,EAAOM,OAAOH,QACrB8B,SAAUjC,EAAOkC,aACjBC,MAAOnC,EAAOoC,QAAQjC,SAAWkC,QAAQrC,EAAOsC,OAAOnC,SACvDoC,WAAYvC,EAAOoC,QAAQjC,SAAWH,EAAOsC,OAAOnC,UAEtDY,cAAC7B,EAAS,CACRwC,GAAG,eACHE,KAAK,SACLG,MAAO,CAAES,OAAQ,YAAa1B,SAC/B,cAIHC,cAAC7B,EAAS,CAAC8B,QAASA,IAAML,IAAcG,SAAC,iBAG7B,ECpET2B,EAAUA,KACrB,MAAOC,EAAMC,GAAW5C,mBAAgB,KACjC6C,GAAe7C,mBAAwB,MAa9C,OACEgB,cAAA,OAAAD,SACED,eAACxB,EAAgB,CAAAyB,SAAA,CACfC,cAACxB,EAAa,CAAAuB,SACZC,cAAC8B,IAAM,CAACb,MAAOY,EAAaX,SAffa,IACnB,MAAMC,EAAkBD,EAAME,OAAOhB,MACrCiB,SAASC,eAAe,YAAYC,UAAYJ,CAAe,EAaPjC,SAC/C4B,EAAKU,KAAKC,GACTtC,cAACuC,IAAQ,CAACtB,MAAOqB,EAAI1B,KAAKb,SAAEuC,EAAI1B,aAItCZ,cAACpB,EAAW,CAACe,YAhBCL,UAClB,MAAMkD,EAAc,CAAE5B,QAChB6B,EAAa,IAAId,EAAMa,GAC7BZ,EAAQa,EAAW,QAeb,EClCK,SAASC,IACtB,OACE1C,cAAA,OAAK2C,UAAU,MAAK5C,SAClBD,eAAA,OAAK6C,UAAU,gBAAe5C,SAAA,CAC5BC,cAAA,MAAAD,SAAI,6BACJD,eAAA,OAAAC,SAAA,CACEC,cAAC0B,EAAO,IACR1B,cAACtB,EAAgB,CAAAqB,SACfC,cAAA,OAAKW,GAAG,WAAUZ,SAAC,uBAM/B,CCdA,MAAM6C,EAAcV,SAASC,eAAe,QAC5CU,iBAAO7C,cAAC0C,EAAG,IAAKE,E","file":"static/js/main.b2c69177.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { makeStyles, Theme } from \"@material-ui/core\";\n\nexport const modalStyles = makeStyles((theme: Theme) => ({\n  modalPlacement: {\n    width: \"80vw\",\n    height: \"50vh\",\n    marginLeft: \"25%\",\n    marginTop: \"8%\"\n  },\n  dialogPaper: {\n    minHeight: \"200px\",\n    maxHeight: \"200px\",\n    borderRadius: \"15px\"\n  },\n  customWidth: {\n    maxWidth: 719,\n    backgroundColor: \"white\",\n    fontSize: \"11px\",\n    color: \"lightgray\",\n    fontWeight: 500,\n    boxShadow: \"0px 2px 10px #00000027\",\n    padding: \"8px 20px\",\n    textAlign: \"center\"\n  },\n  arrowStyles: {\n    color: \"white\",\n    boxShadow: \"#00000027\"\n  }\n}));\n\nexport const AddDogContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 1em;\n`;\n\nexport const DogButton = styled.button`\n  background-color: #03045e;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  text-align: center;\n  display: flex;\n  font-size: 1em;\n`;\n\nexport const DogListContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-items: center;\n  padding: 8px;\n  border-color: #03045e;\n  border-style: solid;\n  border-width: 1.5px;\n  border-radius: 15px;\n  background-color: white;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 1em;\n`;\n\nexport const ListContainer = styled.div`\n  flex: 1;\n  flex-grow: 3;\n  display: flex;\n  flex-direction: column;\n  padding: 6px;\n  margin: 8px;\n`;\n\nexport const DogNameContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  flex-grow: 4;\n  margin: 8px;\n  padding: 6px;\n  border-radius: 15px;\n  background-color: #03045e;\n  font-size: 1.25em;\n`;\n","import { useState } from \"react\";\nimport { Dialog, DialogContent, TextField } from \"@material-ui/core\";\nimport { modalStyles, AddDogContainer, DogButton } from \"./AddDogStyles\";\nimport { useFormik } from \"formik\";\n\ninterface AddDogFieldProps {\n  onCreateDog: (name: string) => Promise<void>;\n}\n\ninterface DogFormValues {\n  dogName: string;\n}\n\nexport const AddDogField = (props: AddDogFieldProps) => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const formik = useFormik({\n    initialValues: {\n      dogName: \"\"\n    },\n    onSubmit: async (\n      values: DogFormValues,\n      { resetForm }: { resetForm: () => void }\n    ) => {\n      if (values.dogName.length > 0) {\n        await props.onCreateDog(values.dogName);\n        resetForm();\n      }\n    }\n  });\n\n  function handleClickOpen() {\n    setModalOpen(true);\n  }\n\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n\n  const classes = modalStyles();\n\n  return (\n    <AddDogContainer>\n      <DogButton onClick={handleClickOpen}>Add dog</DogButton>\n      <Dialog\n        open={modalOpen}\n        onClose={handleClose}\n        classes={{\n          container: classes.modalPlacement,\n          paper: classes.dialogPaper\n        }}\n        fullWidth={true}\n        maxWidth={\"xs\"}\n      >\n        <DialogContent>\n          <form onSubmit={formik.handleSubmit}>\n            <TextField\n              id=\"dogName\"\n              name=\"dogName\"\n              type=\"dogName\"\n              variant=\"standard\"\n              placeholder=\"Dog's name\"\n              fullWidth\n              style={{ fontSize: \"14px\" }}\n              value={formik.values.dogName}\n              onChange={formik.handleChange}\n              error={formik.touched.dogName && Boolean(formik.errors.dogName)}\n              helperText={formik.touched.dogName && formik.errors.dogName}\n            />\n            <DogButton\n              id=\"submitButton\"\n              type=\"submit\"\n              style={{ margin: \"10px 0px\" }}\n            >\n              Submit\n            </DogButton>\n          </form>\n          <DogButton onClick={() => handleClose()}>Close</DogButton>\n        </DialogContent>\n      </Dialog>\n    </AddDogContainer>\n  );\n};\n","import { useState } from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { AddDogField } from \"./AddDogField\";\nimport { DogListContainer, ListContainer } from \"./AddDogStyles\";\n\ninterface Dog {\n  id: number;\n  name: string;\n}\n\nexport const DogList = () => {\n  const [dogs, setDogs] = useState<Dog[]>([]);\n  const [selectedDog] = useState<number | null>(null);\n\n  const onSelectDog = (event: any) => {\n    const selectedDogName = event.target.value;\n    document.getElementById(\"showName\").innerHTML = selectedDogName;\n  };\n\n  const onCreateDog = async (name: string) => {\n    const newDog: Dog = { name };\n    const newDogList = [...dogs, newDog];\n    setDogs(newDogList);\n  };\n\n  return (\n    <div>\n      <DogListContainer>\n        <ListContainer>\n          <Select value={selectedDog} onChange={onSelectDog}>\n            {dogs.map((dog: Dog) => (\n              <MenuItem value={dog.name}>{dog.name}</MenuItem>\n            ))}\n          </Select>\n        </ListContainer>\n        <AddDogField onCreateDog={onCreateDog} />\n      </DogListContainer>\n    </div>\n  );\n};\n","import \"./styles.css\";\nimport { DogList } from \"./DogList\";\nimport { DogNameContainer } from \"./AddDogStyles\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <div className=\"flexcontainer\">\n        <h1>Who's the best dog ever?</h1>\n        <div>\n          <DogList />\n          <DogNameContainer>\n            <div id=\"showName\">it is ...</div>\n          </DogNameContainer>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}